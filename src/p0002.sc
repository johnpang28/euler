/*

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the
first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the
even-valued terms.

*/
object p0002 {

  val start = List(1, 2)

  def next(xs: List[Int]) = xs.takeRight(2).sum

  def grow(xs: List[Int], max: Int): List[Int] = {
    val x = next(xs)
    if (x < max) grow(xs ::: List(x), max)
    else xs
  }

  def sumEven(xs: List[Int]) = xs.filter(_ % 2 == 0).sum

  sumEven(grow(start, 4000000))
}